apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-webapp-deployment
  labels:
    app: go-webapp
spec:
  selector:
    matchLabels:
      app: go-webapp
  template:
    metadata:
      labels:
        app: go-webapp
    spec:
      containers:
        - name: go-webapp-container
          image: username/go-argocd-workshop:image-tag
          envFrom:
            - configMapRef:
                name: app-envs
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
          livenessProbe:
            httpGet:
              path: /go/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /go/ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: api-key
              mountPath: /secrets
          securityContext:
            capabilities:
              drop:
                - NET_RAW
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsUser: 10001
      volumes:
        - name: api-key
          secret:
            secretName: app-secrets
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
---
apiVersion: v1
kind: Service
metadata:
  name: go-webapp-service
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: go-webapp
